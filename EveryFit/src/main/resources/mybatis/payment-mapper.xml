<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="payment">
	<select id="sequence" resultType="int">
		select payment_seq.nextval from dual
	</select>
<!-- 		private int paymentNo;
	private String paymentTid;//PG사 결제 거래번호
	private String paymentName;//PG사 결제 상품명 KakaoPayApproveResponseVO.itemName
	private int paymentPrice;//PG사 결제 가격 KakaoPayApproveResponseVO.amount.gettotal
	private Date paymentTime;//결제시간
	private int paymentProduct;//구매상품번호 KakaoPayApproveResponseVO.itemCode
	private String paymentMember; -->
	<insert id="save">
	insert into payment(
		payment_no, payment_member,payment_tid,
		payment_name, payment_price, payment_product
	) 
	values(
		#{paymentNo}, #{paymentMember}, #{paymentTid},
		#{paymentName}, #{paymentPrice}, #{paymentProduct}
	)
	</insert>
	
	<insert id="periodPaymentSave">
	insert into period_payment(
		period_payment_no, period_payment_sid, period_payment_moim_no
	) 
	values(
		#{periodPaymentNo}, #{periodPaymentSid}, #{periodPaymentMoimNo}
	)
	</insert>
	
	<select id="list" resultType="PaymentDto">
		select * from payment order by payment_no asc
	</select>
	
	<select id="periodPaymentList" resultType="PeriodPaymentDto">
		select * from period_payment order by period_payment_no asc
	</select>
	
	<select id="listAll" resultType="PaymentListAllVO">
        <![CDATA[
            SELECT 
                p.payment_no,
                p.payment_tid,
                p.payment_name,
                p.payment_price,
                p.payment_time,
                p.payment_product,
                p.payment_member,
                pp.period_payment_no,
                pp.period_payment_sid,
                pp.period_payment_start,
                pp.period_payment_end,
                pp.period_payment_status
            FROM 
                payment p
            INNER JOIN
                period_payment pp
            ON 
                p.payment_no = pp.period_payment_no
            WHERE 
                TRUNC(pp.period_payment_END) = TRUNC(SYSDATE) 
                AND pp.period_payment_status = 'Y'
        ]]>
	</select>
	
	<!-- 수정 -->
	<update id="updateEndDate">
    <![CDATA[
        UPDATE period_payment 
        SET period_payment_end = ADD_MONTHS(#{periodPaymentEnd}, 1) 
        WHERE period_payment_no = #{periodPaymentNo}
    ]]>
</update>
	<!-- 상세조회  -->
	<select id="periodPaymentDetail" resultType="periodPaymentDto">
	select * from period_payment where period_payment_no = #{periodPaymentNo}
	</select>
	
		<select id="paymentDetail" resultType="paymentDto">
	select * from payment where payment_no = #{paymentNo}
	</select>
	
		 <!-- 결제 전체내역(멤버를 넣어서) -->
<select id="listAllByMember" resultType="paymentListAllVO">
        
           SELECT 
                p.payment_no,
                p.payment_tid,
                p.payment_name,
                p.payment_price,
                p.payment_time,
                p.payment_product,
                p.payment_member,
                pp.period_payment_no,
                pp.period_payment_sid,
                pp.period_payment_start,
                pp.period_payment_end,
                pp.period_payment_status,
                pp.period_payment_moim_no
            FROM 
                payment p
            LEFT outer JOIN
                period_payment pp
            ON 
                p.payment_no = pp.period_payment_no
                WHERE p.payment_member=#{paymentMember}
        
	</select>
        
	<!-- payment 취소 처리 -->
	<update id="cancel">
		update payment set payment_price = #{paymentPrice} where payment_no = #{paymentNo}
	</update>
	
		<!-- payment 취소 처리 -->
	<update id="periodCancel">
		update period_payment set period_payment_status = #{periodPaymentStatus}, 
		period_payment_sid = #{periodPaymentSid} where period_payment_no = #{periodPaymentNo}
	</update>
	
<!-- 정기결제 취소를 위해 정기결제중인 리스트 띄우기 -->
<select id="paymentListByMember" resultType="PaymentListByMemberVO">
        SELECT 
        m.MOIM_NO , 
        m.MOIM_TITLE , 
        m.MOIM_UPGRADE , 
        mm.MEMBER_EMAIL, 
        mm.MOIM_MEMBER_LEVEL,
        p.PERIOD_PAYMENT_NO,
        p.PERIOD_PAYMENT_STATUS 
        FROM 
        moim m LEFT OUTER JOIN moim_member mm 
		ON m.MOIM_NO = mm.MOIM_NO LEFT outer JOIN period_payment p ON m.MOIM_NO = p.PERIOD_PAYMENT_MOIM_NO 
	WHERE mm.MEMBER_EMAIL = #{memberEmail} AND m.MOIM_UPGRADE = 'Y' AND p.PERIOD_PAYMENT_STATUS = 'Y'
	</select>











</mapper>



