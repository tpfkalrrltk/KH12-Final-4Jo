<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="league">
	
	<!-- /////////////리그관련//////////////////////// -->
	
	<select id="seqLeague" resultType="int">
		select league_seq.nextval from dual
	</select>
	
	<!-- 리그등록 -->
	<insert id="insertLeague">
        INSERT INTO league (
        	league_no, event_no, league_manager, league_title, league_detail, league_entry_fee,
        	league_start, league_end, chat_room_no, location_no, league_team_count, league_roaster_count
        	)
        VALUES (
        	#{leagueNo}, #{eventNo}, #{leagueManager}, #{leagueTitle}, #{leagueDetail}, #{leagueEntryFee}, 
        	#{leagueStart}, #{leagueEnd}, #{chatRoomNo}, #{locationNo}, #{leagueTeamCount}, #{leagueRoasterCount})
    </insert>
    
    <!-- 리그목록조회 -->
    <select id="listLeague" resultType="LeagueListDto">
    	select * from league_list_view order by league_no desc
    </select>
    
    <!-- 그냥 리그 목록 조회 -->
    <select id="listLeagueDto" resultType="LeagueDto">
    	select * from league order by league_no desc
    </select>
    
    <!-- 리그 메인 조회 -->
    <select id="listLeagueSearch" resultType="LeagueListDto">
    	select * from league_list_view
    	<where>
    		<if test="leagueNo>0">
			 	and league_no = #{leagueNo}    		
    		</if>
    		<if test="leagueManager!=null and !leagueManager.equals('')">
				and instr(league_manager, #{leagueManager})>0    		
    		</if>
    		<if test="leagueTitle!=null and !leagueTitle.equals('')">
				and instr(league_title, #{leagueTitle})>0	
    		</if>
    		<if test="leagueStatus!=null and !leagueStatus.equals('')">
				and league_status = #{leagueStatus}	
    		</if>
    		<if test="eventName!=null and !eventName.equals('')">
				and instr(event_name, #{eventName})>0
    		</if>
    		<if test="locationDepth1!=null and !locationDepth1.equals('')">
				and location_depth1 = #{locationDepth1}
    		</if>
    		<if test="locationDepth2!=null and !locationDepth2.equals('')">
    			and instr(location_depth2, #{locationDepth2})>0
    		</if>
    	</where>
    	order by league_no desc
    </select>
    
    <!-- 리그 상세 조회 -->
    <select id="findLeague" resultType="LeagueDto">
    	SELECT * FROM league WHERE league_no = #{leagueNo}
    </select>
    
    <!-- 리그 수정 -->
    <update id="updateLeague">
		UPDATE league
    	<set>
       		<if test="leagueDto.eventNo!=null">
       			event_no = #{leagueDto.eventNo},
       		</if>
       		<if test="leagueDto.leagueManager!=null">
       			league_manager = #{leagueDto.leagueManager},
       		</if>
       		<if test="leagueDto.leagueTitle!=null">
       			league_title = #{leagueDto.leagueTitle},
       		</if>
       		<if test="leagueDto.leagueDetail!=null">
       			league_detail = #{leagueDto.leagueDetail},
       		</if>
       		<if test="leagueDto.leagueEntryFee!=null">
       			league_entry_fee = #{leagueDto.leagueEntryFee},
       		</if>
       		<if test="leagueDto.leagueStart!=null">
       			league_start = #{leagueDto.leagueStart},
       		</if>
       		<if test="leagueDto.leagueEnd!=null">
       			league_end = #{leagueDto.leagueEnd},
       		</if>
       		<if test="leagueDto.leagueStatus!=null">
       			league_status = #{leagueDto.leagueStatus},
       		</if>
       		<if test="leagueDto.chatRoomNo!=null">
       			chat_room_no = #{leagueDto.chatRoomNo},
       		</if>
       		<if test="leagueDto.locationNo!=null">
       			location_no = #{leagueDto.locationNo},
       		</if>
       		<if test="leagueDto.leagueTeamCount!=null">
       			league_team_count = #{leagueDto.leagueTeamCount},
       		</if>
       		<if test="leagueDto.leagueRoasterCount!=null">
       			league_roaster_count = #{leagueDto.leagueRoasterCount},
       		</if>
       </set>
        WHERE league_no = #{leagueNo}
    </update>
    
    <!-- 리그 삭제 -->
    <delete id="deleteLeague">
        DELETE FROM league WHERE league_no = #{leagueNo}
    </delete>
    
    <!-- 리그팀 관련//////////////////////////////////////////////////// -->
    <!-- 시퀀스 -->
    <select id="seqLeagueTeam" resultType="int">
		select league_team_seq.nextval from dual
	</select>
    
    <!-- 리그팀 추가 -->
    <insert id="insertLeagueTeam">
        INSERT INTO league_team (league_team_no, league_no, moim_no, league_team_name)
        VALUES (#{leagueTeamNo}, #{leagueNo}, #{moimNo}, #{leagueTeamName})
    </insert>
    
    <!-- 리그팀 조회 -->
    <select id="findLeagueTeam" resultType="LeagueTeamDto">
        SELECT * FROM league_team WHERE league_team_no = #{leagueTeamNo}
    </select>
    
    <!-- 리그팀 전체 -->
    <select id="listLeagueTeam" resultType="LeagueTeamDto">
        SELECT * FROM league_team order by league_team_no asc
    </select>
    
    <!-- 리그별 리그팀 리스트 -->
    <select id="listLeagueTeamByLeague" resultType="LeagueTeamDto">
    	select * from league_team where league_no = #{leagueNo} order by league_team_no asc
    </select>
    
    <!-- 리그별 승인대기중인 리그팀 리스트 -->
    <select id="listLeagueTeamNonApprove" resultType="LeagueTeamDto">
    	select * from league_team where league_no = #{leagueNo} and league_team_status = 'N' 
    	order by league_team_no asc
    </select>
    
    <!-- 리그별 승인된 리그팀 리스트 -->
    <select id="listLeagueTeamApprove" resultType="LeagueTeamDto">
    	select * from league_team where league_no = #{leagueNo} and league_team_status = 'Y' 
    	order by league_team_no asc
    </select>
    
    <!-- 리그 순위표 리스트 -->
    <select id="listLeagueTeamRank" resultType="LeagueTeamRankListVO">
    	select league_team.*, rank() over (order by league_team_point desc, league_team_win desc, 
    	league_team_gd desc, league_team_g desc) as league_team_rank from league_team
    	where league_no = #{leagueNo} and league_team_status = 'Y'
    </select>
    
    <!-- 리그팀 업데이트 -->
    <update id="updateLeagueTeam">
        UPDATE league_team
        <set>
            <if test="leagueTeamDto.leagueTeamWin != null">
                league_team_win = #{leagueTeamDto.leagueTeamWin},
            </if>
            <if test="leagueTeamDto.leagueTeamLose != null">
                league_team_lose = #{leagueTeamDto.leagueTeamLose},
            </if>
            <if test="leagueTeamDto.leagueTeamDraw != null">
                league_team_draw = #{leagueTeamDto.leagueTeamDraw},
            </if>
            <if test="leagueTeamDto.leagueTeamG != null">
                league_team_g = #{leagueTeamDto.leagueTeamG},
            </if>
            <if test="leagueTeamDto.leagueTeamD != null">
                league_team_d = #{leagueTeamDto.leagueTeamD},
            </if>
        </set>
        WHERE league_team_no = #{leagueTeamNo}
    </update>
    
    <!-- 리그팀 상태 자동 계산 업데이트 -->
    <update id="leagueTeamCalculate">
    	update league_team
    	set league_team_match_count = league_team_win + league_team_draw + league_team_lose,
    	league_team_gd = league_team_g - league_team_d,
    	league_team_point = (league_team_win * 3) + league_team_draw
    	where league_team_no = #{leagueTeamNo}
    </update>
   
	<!-- 리그팀 상태 수정 -->
	<update id="updateLeagueTeamStatus">
		update league_team set league_team_status = #{status} where league_team_no = #{leagueTeamNo}
	</update>   
    
     <!-- 리그팀 삭제 -->
    <delete id="deleteLeagueTeam">
        DELETE FROM league_team WHERE league_team_no = #{leagueTeamNo}
    </delete>
    
    <!-- 리그접수가능한지 체크 -->
    <select id="isTeamRegistered" resultType="LeagueTeamDto">
    	select * from league_team where league_no = #{leagueNo} and moim_no = #{moimNo}
    </select>
	
	<!-- 리그접수 관련 -->
	<!-- 리그접수 시퀀스 -->
	<select id="seqLeagueApplication" resultType="int">
		select league_application_seq.nextval from dual
	</select>
	
    <!-- 리그접수 생성 -->
    <insert id="insertLeagueApplication">
        INSERT INTO league_application (league_application_no, league_no, league_application_start, league_application_end)
        VALUES (#{leagueApplicationNo}, #{leagueNo},
        to_timestamp(#{leagueApplicationStart}, 'YYYY-MM-DD"T"HH24:MI'), 
        to_timestamp(#{leagueApplicationEnd}, 'YYYY-MM-DD"T"HH24:MI'))
    </insert>
    
    <!-- 리그 접수 상세 -->
    <select id="findLeagueApplication" resultType="LeagueApplicationDto">
        SELECT * FROM league_application WHERE league_no = #{leagueNo}
    </select>
    
    <!-- 리그 접수 전체 -->
    <select id="listLeagueApplication" resultType="LeagueApplicationDto">
        SELECT * FROM league_application order by league_application_no desc
    </select>
    
    <!-- 리그접수 업데이트 -->
    <update id="updateLeagueApplication">
        UPDATE league_application
        <set>
            <if test="leagueApplicationDto.leagueNo != null">
                league_no = #{leagueApplicationDto.leagueNo},
            </if>
            <if test="leagueApplicationDto.leagueApplicationStart != null">
                league_application_start = to_timestamp(#{leagueApplicationDto.leagueApplicationStart}, 'YYYY-MM-DD"T"HH24:MI'),
            </if>
            <if test="leagueApplicationDto.leagueApplicationEnd != null">
                league_application_end = to_timestamp(#{leagueApplicationDto.leagueApplicationEnd}, 'YYYY-MM-DD"T"HH24:MI'),
            </if>
        </set>
        WHERE league_application_no = #{leagueApplicationNo}
    </update>
    
    <!-- 리그접수 삭제 -->
    <delete id="deleteLeagueApplication">
        DELETE FROM league_application WHERE league_application_no = #{leagueApplicationNo}
    </delete>
    
    <!-- ////////////////////////////////리그경기관련//////////////// -->
    <!-- 리그 경기 시퀀스 -->
    <select id="seqLeagueMatch" resultType="int">
		select league_match_seq.nextval from dual
	</select>
	
    <!-- 리그경기 생성 -->
    <insert id="insertLeagueMatch">
        INSERT INTO league_match (league_match_no, league_no, league_match_home, league_match_away, league_match_date, league_match_location)
        VALUES (#{leagueMatchNo}, #{leagueNo}, #{leagueMatchHome}, #{leagueMatchAway}, 
        to_timestamp(#{leagueMatchDate}, 'YYYY-MM-DD"T"HH24:MI'),
        #{leagueMatchLocation})
    </insert>
    
    <!-- 리그경기 조회 -->
    <select id="findLeagueMatch" resultType="LeagueMatchDto">
        SELECT * FROM league_match WHERE league_match_no = #{leagueMatchNo}
    </select>
    
    <!-- 리그경기 리스트 조회 -->
    <select id="listLeagueMatch" resultType="LeagueMatchDto">
        SELECT * FROM league_match where league_no = #{leagueNo} order by league_match_no asc
    </select>
    
    <!-- 리그경기리스트vo 조회 -->
    <select id="listLeagueMatchListVO" resultType="LeagueMatchListVO">
		SELECT * FROM league_match_list_view WHERE league_no = #{leagueNo}
		ORDER BY league_match_date asc, league_match_no asc
    </select>
    
    <!-- 리그경기리스트VO 단일조회 -->
    <select id="findLeagueMatchListVO" resultType="LeagueMatchListVO">
    	SELECT * FROM league_match_list_view WHERE league_match_no = #{leagueMatchNo}
    </select>
    
    <!-- 리그경기 업데이트 -->
    <update id="updateLeagueMatch">
        UPDATE league_match
        <set>
            <if test="leagueMatchDto.leagueMatchHome != null">
                league_match_home = #{leagueMatchDto.leagueMatchHome},
            </if>
            <if test="leagueMatchDto.leagueMatchAway != null">
                league_match_away = #{leagueMatchDto.leagueMatchAway},
            </if>
            <if test="leagueMatchDto.leagueMatchDate != null">
                league_match_date = to_timestamp(#{leagueMatchDto.leagueMatchDate}, 'YYYY-MM-DD"T"HH24:MI'),
            </if>
            <if test="leagueMatchDto.leagueMatchHomeScore != null">
                league_match_home_score = #{leagueMatchDto.leagueMatchHomeScore},
            </if>
            <if test="leagueMatchDto.leagueMatchAwayScore != null">
                league_match_away_score = #{leagueMatchDto.leagueMatchAwayScore},
            </if>
            <if test="leagueMatchDto.leagueMatchLocation != null">
                league_match_location = #{leagueMatchDto.leagueMatchLocation},
            </if>
        </set>
        WHERE league_match_no = #{leagueMatchNo}
    </update>
    
    <!-- 리그경기 삭제 -->
    <delete id="deleteLeagueMatch">
        DELETE FROM league_match WHERE league_match_no = #{leagueMatchNo}
    </delete>
    
    <!-- //////////////////////////////////////리그 로스터 -->
    
    <!-- 리그로스터 시퀀스 -->
    <select id="seqLeagueTeamRoaster" resultType="int">
    	select league_team_roaster_seq.nextval from dual
    </select>
    
    <!-- 리그로스터 생성 -->
    <insert id="insertLeagueRoaster">
        INSERT INTO league_team_roaster (league_team_roaster_no, league_no, league_team_no, member_email)
        VALUES (#{leagueTeamRoasterNo}, #{leagueNo}, #{leagueTeamNo}, #{memberEmail})
    </insert>
    
    <!-- 리그로스터 조회 -->
    <select id="findLeagueRoaster" resultType="LeagueTeamRoasterDto">
        SELECT * FROM league_team_roaster WHERE league_team_roaster_no = #{leagueTeamRoasterNo}
    </select>
    
    <!-- 리그로스터 리스트 조회 -->
    <select id="listLeagueRoaster" resultType="LeagueTeamRoasterDto">
    	select * from league_team_roaster order by league_team_roaster_no desc
    </select>
    
    <!-- 리그로스터 업데이트 -->
    <update id="updateLeagueRoaster">
        UPDATE league_team_roaster
        <set>
            <if test="leagueTeamRoasterDto.leagueNo != null">
                league_no = #{leagueTeamRoasterDto.leagueNo},
            </if>
            <if test="leagueTeamRoasterDto.leagueTeamNo != null">
                league_team_no = #{leagueTeamRoasterDto.leagueTeamNo},
            </if>
            <if test="leagueTeamRoasterDto.memberEmail != null">
                member_email = #{leagueTeamRoasterDto.memberEmail},
            </if>
        </set>
        WHERE league_team_roaster_no = #{leagueTeamRoasterNo}
    </update>
    
    <!-- 리그 로스터 삭제 -->
    <delete id="deleteLeagueRoaster">
        DELETE FROM league_team_roaster WHERE league_team_roaster_no = #{leagueTeamRoasterNo}
    </delete>
    
    <insert id="insertLeagueImage">
    	insert into league_image(league_no, attach_no) values(#{leagueNo}, #{attachNo})
    </insert>
    
</mapper>    